[{"author":{"name":"Matt Warren","avatar":"http://www.gravatar.com/avatar.php?gravatar_id=187e4cdfbc0279bdaf57a4ae58f3fc69&size=50&default=identicon"},"date":"(10/19/2010 12:35 PM)","text":"\r\n\t\t\t\t\tWhen you say \"For the vast majority of queries, it is simply not necessary to pre-define those indexes\"It might be worth adding that dynamic queries are not suitable if you need to do any sorting/ordering or if you need results that include all docs - straight away. In these cases creating indexes up front is still the best option.But dynamic queries are a *really* cool feature.\r\n\t\t\t\t"},{"author":{"name":"Rob Ashton","avatar":"http://www.gravatar.com/avatar.php?gravatar_id=b6a6693f03003f7ab0f9b0882e9c2dde&size=50&default=identicon"},"date":"(10/19/2010 3:39 PM)","text":"\r\n\t\t\t\t\tIt's a difficult one, RavenDB does now support ordering on dynamic queries, and by the time you have enough data in the system for the dynamic nature of the query to be a problem, the query is probably permanent.\r\n\t\t\t\t"},{"author":{"name":"Matt Warren","avatar":"http://www.gravatar.com/avatar.php?gravatar_id=187e4cdfbc0279bdaf57a4ae58f3fc69&size=50&default=identicon"},"date":"(10/19/2010 11:10 PM)","text":"\r\n\t\t\t\t\tSorry I didn't mean to say that dynamic queries can't sort, just that it causes problems.But I guess I was thinking about the situation where you already have a large dataset and you issue a new dynamic query. In that case the query will be stale for a long time, during which sorting might not return the correct results. But I admit it's not a common case.\r\n\t\t\t\t"},{"author":{"name":"Anders","avatar":"/images/IdenticonHandler.ashx?code=739797881"},"date":"(10/20/2010 6:59 AM)","text":"\r\n\t\t\t\t\tI think there need to be some more information on when I do need to pre-define some indexes. What can't/shouldn't I do with dynamic queries etc.\r\n\t\t\t\t"},{"author":{"name":"Rob Ashton","avatar":"http://www.gravatar.com/avatar.php?gravatar_id=b6a6693f03003f7ab0f9b0882e9c2dde&size=50&default=identicon"},"date":"(10/20/2010 12:43 PM)","text":"\r\n\t\t\t\t\tYou're right, I am trying to do it within the context of this series however and there are still a lot of features I have left to cover :)Oren does a good summary of when you wouldn't want to use dynamic queries here: ayende.com/.../ravenrsquos-dynamic-queries.aspx\r\n\t\t\t\t"},{"author":{"name":"Nadav","avatar":"http://www.gravatar.com/avatar.php?gravatar_id=b72c018345724ee4e36b1cfa02b3d732&size=50&default=identicon"},"date":"(10/21/2010 6:40 AM)","text":"\r\n\t\t\t\t\tI have a question about the updating of the indexes being done in a background thread.Does this mean that if I add a document to the database and then query the database then the newly added document might not be in the query result?That seems a bit problematic to me...\r\n\t\t\t\t"},{"author":{"name":"Rob Ashton","avatar":"http://www.gravatar.com/avatar.php?gravatar_id=b6a6693f03003f7ab0f9b0882e9c2dde&size=50&default=identicon"},"date":"(10/21/2010 10:02 AM)","text":"\r\n\t\t\t\t\tThat is indeed the case.This is always a possibility in any system which is built this way (most of the CQRSy patterns acknowledge this). Typically the solution is to design user interfaces that *assume* success and display the updated results immediately.If seeing 'up to date' results is massively important (and you should strive to avoid such situations), then you can always use WaitForNoneStaleResultsAsOfNow to make sure you have the latest indexed data.\r\n\t\t\t\t"},{"author":{"name":"Nadav","avatar":"http://www.gravatar.com/avatar.php?gravatar_id=b72c018345724ee4e36b1cfa02b3d732&size=50&default=identicon"},"date":"(10/21/2010 2:05 PM)","text":"\r\n\t\t\t\t\tThanks, Rob.I'm just trying to think I you design the interface to avoid it.i.e. You add an item to the data, go back to the index page, and the Item you just added is not shown. The client's response will be WTF?!\r\n\t\t\t\t"},{"author":{"name":"Rob Ashton","avatar":"http://www.gravatar.com/avatar.php?gravatar_id=b6a6693f03003f7ab0f9b0882e9c2dde&size=50&default=identicon"},"date":"(10/21/2010 2:21 PM)","text":"\r\n\t\t\t\t\tIn a web application, rather than go to a different page, show an editor in-situ (JavaScript, it's the modern way anyway), when they add the item, you can add it to the list without requesting any data from the server at all.(Just one solution)\r\n\t\t\t\t"}]