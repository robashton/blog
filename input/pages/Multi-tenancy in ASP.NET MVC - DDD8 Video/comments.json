[{"author":{"name":"Adam","avatar":"http://www.gravatar.com/avatar.php?gravatar_id=a5d515200029ed84f272882c5c0d0a95&size=50&default=identicon"},"date":"(2/8/2010 11:12 AM)","text":"\r\n\t\t\t\t\tHey,Really good talk their Rob. We currently have a classic asp that hasn't yet been converted to .net that employs the \"if\" tag soup you referred to. It also is classic asp so there is tag without being multi-tenant. There is also approaching 250 configuration settings which hide/show certain parts of the app. Its nasty.You showed some really insightful techniques that will stead me in good stead for other multi-tennant apps or if we convert one day.One question though. If you want to just hide or not hide a \"description\" field for example. how would you deal with that, when you have validation concerns, layout concerns etc.Cheers,Adam\r\n\t\t\t\t"},{"author":{"name":"robashton","avatar":"http://www.gravatar.com/avatar.php?gravatar_id=b6a6693f03003f7ab0f9b0882e9c2dde&size=50&default=identicon"},"date":"(2/8/2010 1:19 PM)","text":"\r\n\t\t\t\t\tThat's exactly the scenario I've been pulling this company from over that time :)When it comes to the question of adding/removing single fields from a page, I step back and look at the problem differently.For example, in our product there is a page which is shown to confirm whether an action is to happen or not.On that page, there can be anywhere between 1-5 questions with yes/no answers.Rather than have switches to turn them off/on, we define the contents of that page in data (XML in this case, but it could be a DSL using Boo or similar), and then render out that page dynamically based on that data.The same goes for a number of areas in the system, where we replace a set of on/off switches with something that solves the known problem in general instead of just patching in the answers.Where we can't do that, then in the example of  a very few certain forms, we'd define an action specifically for posting the form to, and stick the form itself in a partial view.For each person who then wanted something different, we'd then use a different action (overriding that default one), which takes in a different view model, and uses its own validation.That's not to say a lot of the validation logic can't be shared between those actions/view models of course.I'll keep this question in mind and possibly cover it in a future follow-up blog entry once I've finished this series. :)\r\n\t\t\t\t"},{"author":{"name":"Bets","avatar":"http://www.gravatar.com/avatar.php?gravatar_id=1bab52ce4bedb23809f85251a98b82f0&size=50&default=identicon"},"date":"(10/28/2011 2:53 PM)","text":"\r\n\t\t\t\t\tHey..any chance of getting this presentation in a slightly better quality?Sound seems ok but cant see a sinlge line of code.Cheers\r\n\t\t\t\t"},{"author":{"name":"robashton","avatar":"http://www.gravatar.com/avatar.php?gravatar_id=b6a6693f03003f7ab0f9b0882e9c2dde&size=50&default=identicon"},"date":"(10/28/2011 3:05 PM)","text":"\r\n\t\t\t\t\tI'm afraid not, there was a version of this talk done at Oredev a year or so ago, but I didn't quite pull it off with the same quality\r\n\t\t\t\t"}]