[{"author":{"name":"jdn","avatar":"http://www.gravatar.com/avatar.php?gravatar_id=a89464929f226d9470ee4c89d8d55850&size=50&default=identicon"},"date":"(11/1/2011 3:10 PM)","text":"\r\n\t\t\t\t\t+174.I think this means they will take your craftsmanship badge away though.\r\n\t\t\t\t"},{"author":{"name":"robashton","avatar":"http://www.gravatar.com/avatar.php?gravatar_id=b6a6693f03003f7ab0f9b0882e9c2dde&size=50&default=identicon"},"date":"(11/1/2011 3:15 PM)","text":"\r\n\t\t\t\t\tI don't think I ever held one of those anyway ;-)\r\n\t\t\t\t"},{"author":{"name":"Jef Claes","avatar":"http://www.gravatar.com/avatar.php?gravatar_id=94d1b9d6eed962641a26a95c11d9cb62&size=50&default=identicon"},"date":"(11/1/2011 3:40 PM)","text":"\r\n\t\t\t\t\tFor the ones that care, the source is available at GitHub: https://github.com/robashton/HoverBattles.\r\n\t\t\t\t"},{"author":{"name":"Daniel Lang","avatar":"http://www.gravatar.com/avatar.php?gravatar_id=90073b6469ae86dfbc0b254091e07dac&size=50&default=identicon"},"date":"(11/1/2011 5:49 PM)","text":"\r\n\t\t\t\t\tInteresting,I just had pretty much the same idea of \"crafting away the complexity\" just a few minutes ago: http://daniellang.net/keep-your-code-simple/Btw, I'm looking forward to your post about the tech - sounds really cool.\r\n\t\t\t\t"},{"author":{"name":"Chris Jones","avatar":"/images/IdenticonHandler.ashx?code=1759473513"},"date":"(11/2/2011 10:48 AM)","text":"\r\n\t\t\t\t\tNice post. Totally agree with you.I've just finished work on an interactive multiplayer quiz, we valued simplicity and delivering working code. Ad-hoc pairing and constant communication kept the code clean and not stressing over the usual 'issues' meant that we were focused on the real challenges that a multiplayer system can have.I think there is a lot of truth in your point about boredom --> overcomplexity! Its surprising when you have a genuine problem to solve how insignificant those things seem.\r\n\t\t\t\t"},{"author":{"name":"Tudor","avatar":"http://www.gravatar.com/avatar.php?gravatar_id=1e675d08fd73985db2fba7250afc22f8&size=50&default=identicon"},"date":"(11/2/2011 11:15 AM)","text":"\r\n\t\t\t\t\tAbout: 'and trying to constantly maintain code at some mythical standard would prevent me from actually delivering'- this could meany many things to different people - an inexperienced junior programmer reading thing might think that it's ok to throw some come that \"gets the job done\", even if it's using DataSets, has no unit testing, lots of duplicate code and all the business logic is written in ASP.NET code behind..So there is a balance hard to achive, if the code is going to be maintained by more than one programmer over years..\r\n\t\t\t\t"},{"author":{"name":"robashton","avatar":"http://www.gravatar.com/avatar.php?gravatar_id=b6a6693f03003f7ab0f9b0882e9c2dde&size=50&default=identicon"},"date":"(11/2/2011 11:45 AM)","text":"\r\n\t\t\t\t\tTudor - there is always the danger that the words \"pragmatic\" and \"simple\" will be used to justify doing things that are just plain wrong :-)\r\n\t\t\t\t"},{"author":{"name":"Mahesh","avatar":"http://www.gravatar.com/avatar.php?gravatar_id=6b1ec690851b96b45ca3e080fa71cc5a&size=50&default=identicon"},"date":"(11/3/2011 11:03 AM)","text":"\r\n\t\t\t\t\tDo you suppose progress / understanding would have been any different if you had more than one person on this project?  i.e. I think you're able to get away with some of the \"liberties\" because you worked on this on your own?\r\n\t\t\t\t"},{"author":{"name":"robashton","avatar":"http://www.gravatar.com/avatar.php?gravatar_id=b6a6693f03003f7ab0f9b0882e9c2dde&size=50&default=identicon"},"date":"(11/3/2011 3:51 PM)","text":"\r\n\t\t\t\t\tI think as mentioned above, that with proper communication and a willingness to be agile within a team this would not be an issue. A lot of the constructs we often put in place are designed to prevent this.\r\n\t\t\t\t"},{"author":{"name":"Dan Sutton","avatar":"http://www.gravatar.com/avatar.php?gravatar_id=f58a44742aa894baabc1cc592b404637&size=50&default=identicon"},"date":"(11/3/2011 4:15 PM)","text":"\r\n\t\t\t\t\tWell, in any environment, and in JavaScript especially, you're going to be forced to make some concessions to the platform: I generally find that if you can isolate these into some part of the code which is known to be used for handling that sort of thing, then the beauty of your thought structure can usually be pretty well represented in code, with \"that bit we don't talk about\" kind of hanging out \"over there somewhere\" (on the periphery, as you say). It's OK to do this: in fact, when you're doing a bunch of tricky stuff which the environment wasn't, let's say, designed to do, it becomes a necessity. I think if you can look at your final program and say, \"In the structure of this thing, my original thoughts are represented completely and in the way I had in mind, but let's not talk about <that bit>,\" then you're doing pretty well...\r\n\t\t\t\t"}]