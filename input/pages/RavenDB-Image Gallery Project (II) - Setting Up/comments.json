[{"author":{"name":"KevDog","avatar":"http://www.gravatar.com/avatar.php?gravatar_id=764e226cad54619d332428e11acaa932&size=50&default=identicon"},"date":"(9/28/2010 1:44 PM)","text":"\r\n\t\t\t\t\tRob,Extremely glad you're doing this series, some of your early posts on RavenDB were crucial in helping me get going.I don't know what your plans are for the entire series, but the biggest hurdle I am dealing with is adjusting my thinking toward modeling, so if I may be so bold as to ask for a LOT of detail on how you approach your class structure.Again, many thanks for doing this series.\r\n\t\t\t\t"},{"author":{"name":"Rob Ashton","avatar":"http://www.gravatar.com/avatar.php?gravatar_id=b6a6693f03003f7ab0f9b0882e9c2dde&size=50&default=identicon"},"date":"(9/28/2010 2:20 PM)","text":"\r\n\t\t\t\t\tI'm afraid there is no silver bullet to the problem of modelling, but hopefully the way I am approaching the problem will help with the way you think about the problem.I'll be building the class structure slowly, and going back and modifying the class structure as new requirements and features drive those changes.I aim to make this a good long series with plenty of revisiting and extra functionality/modifications - and feedback such as this will be helpful going forward for what to focus on\r\n\t\t\t\t"},{"author":{"name":"Derek","avatar":"http://www.gravatar.com/avatar.php?gravatar_id=f1c9122bec3b77b6156b3d8657436fec&size=50&default=identicon"},"date":"(9/28/2010 11:17 PM)","text":"\r\n\t\t\t\t\tGood stuff, I was checking out the code.  Cool idea of creating Documents separate from the Model, I didn't think of that.Also, how do your Dynamic queries work as far as stale results?  Before, I was creating a dummy document with my userid so I could make sure it was unique.  I see you're doing that with a dynamic query or with the DoesUserExistWithUsername in the UserService.\r\n\t\t\t\t"},{"author":{"name":"Rob Ashton","avatar":"http://www.gravatar.com/avatar.php?gravatar_id=b6a6693f03003f7ab0f9b0882e9c2dde&size=50&default=identicon"},"date":"(9/28/2010 11:33 PM)","text":"\r\n\t\t\t\t\tI'll be covering that later, but essentially dynamic indexes will wait until they either find the number of results or the index is non-stale.That's neither here nor there though, if the results *do* happen to be stale, the worst that can happen is I try to create the user document and it fails by throwing an exception (transaction fails, nothing happens)It's no different to SELECT COUNT(*) FROM users WHERE username = 'whatever';and thenINSERT INTO users { etc }Only to find that the unique constraint on username prevents the transaction from closing\r\n\t\t\t\t"},{"author":{"name":"Rob Ashton","avatar":"http://www.gravatar.com/avatar.php?gravatar_id=b6a6693f03003f7ab0f9b0882e9c2dde&size=50&default=identicon"},"date":"(9/28/2010 11:34 PM)","text":"\r\n\t\t\t\t\tI am not convinced about creating the model around the documents, I'll hold my breath to see how well it works out :)Trying it out rather than saying \"this is how it should be\", public humiliation followed by change is better than saying nothing at all!\r\n\t\t\t\t"},{"author":{"name":"Derek","avatar":"http://www.gravatar.com/avatar.php?gravatar_id=f1c9122bec3b77b6156b3d8657436fec&size=50&default=identicon"},"date":"(9/29/2010 12:53 AM)","text":"\r\n\t\t\t\t\tIt will be interesting to see how it works.  It makes sense I guess, if impedance still exists even if it's a lot less than a relational database.\r\n\t\t\t\t"}]