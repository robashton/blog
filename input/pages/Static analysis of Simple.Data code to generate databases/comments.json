[{"author":{"name":"fschwiet","avatar":"http://www.gravatar.com/avatar.php?gravatar_id=6a69d8c12aadd1052a5a65cb9023e783&size=50&default=identicon"},"date":"(4/4/2011 10:38 PM)","text":"\r\n\t\t\t\t\tHmm that's a cool idea.  It seems its going to get a lot tougher though when you need to generate a database update script for an existing application, even when the original database schema was created by the same tool.\r\n\t\t\t\t"},{"author":{"name":"robashton","avatar":"http://www.gravatar.com/avatar.php?gravatar_id=b6a6693f03003f7ab0f9b0882e9c2dde&size=50&default=identicon"},"date":"(4/4/2011 10:41 PM)","text":"\r\n\t\t\t\t\tThat's just the standard \"compare and contrast\" these two database schemas right? :-)\r\n\t\t\t\t"},{"author":{"name":"[ICR]","avatar":"/images/IdenticonHandler.ashx?code=1240913002"},"date":"(4/5/2011 10:28 AM)","text":"\r\n\t\t\t\t\tInteresting. I tried using Cecil for reflection for a similar project of code generation based on property access on a dynamic object after I discovered you can't use dynamic in expression trees, but couldn't get it to work. Maybe I'll have a peek at your code at some point to see if that can set me back on the right track.\r\n\t\t\t\t"},{"author":{"name":"tobi","avatar":"http://www.gravatar.com/avatar.php?gravatar_id=0e747083685b78a6fb3f264b48ab253d&size=50&default=identicon"},"date":"(4/5/2011 5:07 PM)","text":"\r\n\t\t\t\t\tThis is a disgusting and unneeded hack. It adds no value. It is just a toy made for the sake of doing new and interesting stuff, not for adding productivity. What about generating a database schema from fractals? Sounds fun.\r\n\t\t\t\t"},{"author":{"name":"robashton","avatar":"http://www.gravatar.com/avatar.php?gravatar_id=b6a6693f03003f7ab0f9b0882e9c2dde&size=50&default=identicon"},"date":"(4/5/2011 5:13 PM)","text":"\r\n\t\t\t\t\t\"It is just a toy made for the sake of doing new and interesting stuff\"No shit, it's called a blog.\r\n\t\t\t\t"},{"author":{"name":"tobi","avatar":"http://www.gravatar.com/avatar.php?gravatar_id=0e747083685b78a6fb3f264b48ab253d&size=50&default=identicon"},"date":"(4/5/2011 5:15 PM)","text":"\r\n\t\t\t\t\tYeah I was being mean. Sry about that. I still stand by my opinion though.\r\n\t\t\t\t"},{"author":{"name":"tobi","avatar":"http://www.gravatar.com/avatar.php?gravatar_id=0e747083685b78a6fb3f264b48ab253d&size=50&default=identicon"},"date":"(4/5/2011 5:30 PM)","text":"\r\n\t\t\t\t\tSometimes I think being able to act anonymously on the internet is a bad trait. It certainly was in this case. To finally add some value: I think this approach does not add anything because there is no difference between 'db.Users.FindByID(1)' and 'db.GetTable(\"Users\").AddIdentity(\"ID\")'. Both are string based. However the dynamic approach adds complexity to no end and requires the programmer to have a bigger working set of concepts because it is not self documenting how it works.\r\n\t\t\t\t"},{"author":{"name":"robashton","avatar":"http://www.gravatar.com/avatar.php?gravatar_id=b6a6693f03003f7ab0f9b0882e9c2dde&size=50&default=identicon"},"date":"(4/5/2011 5:38 PM)","text":"\r\n\t\t\t\t\tWe're talking about the viability of Simple.Data or we talking about the blog post?The blog post I can agree with on the 'would I do this to completion' scale, it was clearly a bit of fun to see how far something can be pushed,  with a nice write-up so others may benefit from the learnings. I can actually think of some good uses of static analysis that don't involve database generation. The key word is probably analysis.On Simple.Data I cannot agree, I've seen a lot of people picking it up lately and being rather happy with how it functions, as a way of just \"getting stuff done\" in a legible and non-ceremonial way its value has already been demonstrated. It might not be the tool for you, and it's certainly not the tool for me in a lot of the applications I develop, but it is a valuable tool for a lot of other people in the .NET space.\r\n\t\t\t\t"},{"author":{"name":"tobi","avatar":"http://www.gravatar.com/avatar.php?gravatar_id=0e747083685b78a6fb3f264b48ab253d&size=50&default=identicon"},"date":"(4/5/2011 6:08 PM)","text":"\r\n\t\t\t\t\tI did not talk about Simple.Data which I did not notice before today but I can see clear value in Simple.Data for certain users. I would actually recommend it to beginners. How much easier could it be to start writing data access in .net?\r\n\t\t\t\t"},{"author":{"name":"rock-meister","avatar":"/images/IdenticonHandler.ashx?code=1495197915"},"date":"(8/7/2011 4:51 PM)","text":"\r\n\t\t\t\t\tAnother (related) area where static analysis would be really beneficial is to check the validity of the sql that is generated.  Since the table names and column names are strings, I see value in doing a static analysis (post compile) to report errors in the sql.Thoughts?rock-meister\r\n\t\t\t\t"}]