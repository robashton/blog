[{"author":{"name":"David Padbury","avatar":"http://www.gravatar.com/avatar.php?gravatar_id=4ae75313c764b6410fb66d8864e862ce&size=50&default=identicon"},"date":"(10/23/2009 9:04 AM)","text":"\r\n\t\t\t\t\tI wrote a much larger comment last night, but I essentially was wondering if you've ever checked out the Linq2NHib code. It would be be interesting to see why it was doing that.\r\n\t\t\t\t"},{"author":{"name":"Rob Ashton","avatar":"http://www.gravatar.com/avatar.php?gravatar_id=b6a6693f03003f7ab0f9b0882e9c2dde&size=50&default=identicon"},"date":"(10/23/2009 9:32 AM)","text":"\r\n\t\t\t\t\tI had a brief step through the source to see if there was an easy fix without having to get involved too heavily in how NHLinq worked.The problem seems to stem not in the provider itself, which quite correctly builds a binary expression comparing the property to the value passed in, but in the creation of the criteria (which certainly looks a lot different to the one I create manually).I didn't go much further because of time constraints. I'm sure it could be fixed with a bit of thought but it's probably worth just waiting for a more mature implementation to be written.\r\n\t\t\t\t"},{"author":{"name":"vlko","avatar":"http://www.gravatar.com/avatar.php?gravatar_id=5341b2838b027640a94b37a6ba49d4e0&size=50&default=identicon"},"date":"(10/30/2009 9:58 PM)","text":"\r\n\t\t\t\t\tTry http://code.google.com/p/nhlambdaextensions/ and you can use criterion with strong type, intelisense and whatever you need:)\r\n\t\t\t\t"},{"author":{"name":"robashton","avatar":"http://www.gravatar.com/avatar.php?gravatar_id=b6a6693f03003f7ab0f9b0882e9c2dde&size=50&default=identicon"},"date":"(11/1/2009 5:24 PM)","text":"\r\n\t\t\t\t\tThat's a *much* better way of doing things - thanks for the link!\r\n\t\t\t\t"}]