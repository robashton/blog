[{"author":{"name":"musicalbox","avatar":"http://www.gravatar.com/avatar.php?gravatar_id=4661768134975d423174a7506badb1c7&size=50&default=identicon"},"date":"(6/3/2010 10:50 AM)","text":"\r\n\t\t\t\t\twell it seems more or less like a marketing RavenDB talk, that's why you've chosen CouchDB as an opponent.if you would kept MongoDB (asynch indexes built in background are comming soon in 1.6 released in a month) and NoRM, Raven would not be such a clear winner, and remember, they ARE the same docs dbs, only you don't want to see it.for whatever the reason, maybe the added cost of RavenDBMongoDB is one hell of a nice doc database, no wonder Rob Conery is so happy with it, and with NoRM adding momentum as the best C# driver the development is very friendly and more, it is for free!I don't know of _any_ C# developer that likes to write javascript (even JQuery doesn't do much help here) so continuing your articles with javascript couchDB API is absolute loss of time...hope you're not finding this post offensive, but MongoDB would definitely be a better RavenDB opponent\r\n\t\t\t\t"},{"author":{"name":"robashton","avatar":"http://www.gravatar.com/avatar.php?gravatar_id=b6a6693f03003f7ab0f9b0882e9c2dde&size=50&default=identicon"},"date":"(6/3/2010 11:09 AM)","text":"\r\n\t\t\t\t\tRE Marketing: I've got nothing to lose/gain through pushing RavenDB, so I'd like to think that's not the case.Getting onto the technology, which is what I *am* interested in:Mongo is currently a *very* different system to Couch + Raven, and my initial statement on read vs write is still a valid one alongside all the other major usage differences.This: www.mongodb.org/.../Comparing+Mongo+DB+and+Couc... is still what I am going off here, the crossover between Couch and Raven as a *lot* larger than Couch and Mongo (or Mongo and Raven).JavaScript vs C# is not the point of this entry (or future entries), the differences between how you *use* them *is*.If in 1.6 my \"completely different use cases\" statement becomes an invalid one, then I shall do a RavenDB vs Mongo series - but there are currently *so many differences* between them it's like comparing apples and steak.\r\n\t\t\t\t"},{"author":{"name":"robashton","avatar":"http://www.gravatar.com/avatar.php?gravatar_id=b6a6693f03003f7ab0f9b0882e9c2dde&size=50&default=identicon"},"date":"(6/3/2010 11:11 AM)","text":"\r\n\t\t\t\t\tAnd no, of course I don't find it offensive - I am writing the series in the knowledge that there are large gaps in my knowledge and I am happy to take all input on board.\r\n\t\t\t\t"},{"author":{"name":"musicalbox","avatar":"http://www.gravatar.com/avatar.php?gravatar_id=4661768134975d423174a7506badb1c7&size=50&default=identicon"},"date":"(6/5/2010 3:55 PM)","text":"\r\n\t\t\t\t\tfair enough, I've just went a bit more deep into MongoDB and now I can see the differences, even Oren mentioned them in his NoSQL cast.the point was, comming from O/RM world, Mongo seemed to be a complete difference (although still a tiny bit like rdbms like) to the way I used to do things, so another doc database (Raven for that matter) looked very similar to \"Mongo world\" (and absolutely different from MsSQL), mainly from developer point of view...that I could not see that *BIG* difference.but I still believe that doc dbs will be very similar in the future in .NET world for the developer, LINQ as an API (NoRM is being actively developed), repository/uow as a data access layer and then you don't really care much about the internals, be it Mongo or RavenDB... (except for additional bonuses like full text search and so on)\r\n\t\t\t\t"},{"author":{"name":"Javier Gonel","avatar":"http://www.gravatar.com/avatar.php?gravatar_id=3b3bf952736e9178b464831d6675f6ac&size=50&default=identicon"},"date":"(8/26/2010 8:30 AM)","text":"\r\n\t\t\t\t\t-- Warning Perhaps I'm wrong so correct me --Well, sharding is implemented on the client. This means that RavenDB SERVER \"doesn't\" support sharding. It means that any client should implement sharding. Client becomes heavy.I believe that the sharding part of ravendb can be used in a .NET couchdb client with a few modifications.Again, replication is leveraged on the client. So what couchdb needs is a super client.Transactions are a strong point. Specifically multiple operation transactions. Couchdb proposes to redesign what you feed to the database to avoid \"collisions\". Due to the fact that couchdb is not very windows friendly and it doesn't have such a powerful client for .NET. I see RavenDB \"owning\" the .NET cake for document databases.Good for .NET developers. Good for competition. Bad because I don't understand why some times efforts cannot be joined to create a great product.\r\n\t\t\t\t"}]